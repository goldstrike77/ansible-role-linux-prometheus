galaxy_info:
  author: your name
  description: your description
  company: your company (optional)

  # If the issue tracker for your role is not on github, uncomment the
  # next line and provide a value
  # issue_tracker_url: http://example.com/issue/tracker

  # Some suggested licenses:
  # - BSD (default)
  # - MIT
  # - GPLv2
  # - GPLv3
  # - Apache
  # - CC-BY
  license: license (GPLv2, CC-BY, etc)

  min_ansible_version: 2.8

  # If this a Container Enabled role, provide the minimum Ansible Container version.
  # min_ansible_container_version:

  # Optionally specify the branch Galaxy will use when accessing the GitHub
  # repo for this role. During role install, if no tags are available,
  # Galaxy will use this branch. During import Galaxy will access files on
  # this branch. If Travis integration is configured, only notifications for this
  # branch will be accepted. Otherwise, in all cases, the repo's default branch
  # (usually master) will be used.
  #github_branch:

  #
  # platforms is a list of platforms, and each platform has a name and a list of versions.
  #
  # platforms:
  # - name: Fedora
  #   versions:
  #   - all
  #   - 25
  # - name: SomePlatform
  #   versions:
  #   - all
  #   - 1.0
  #   - 7
  #   - 99.99

  galaxy_tags: []
    # List tags for your role here, one per line. A tag is a keyword that describes
    # and categorizes the role. Users find roles by searching for tags. Be sure to
    # remove the '[]' above, if you add tags to this list.
    #
    # NOTE: A tag is limited to a single word comprised of alphanumeric characters.
    #       Maximum 20 tags per role.

dependencies:
  # List your role dependencies here, one per line. Be sure to remove the '[]' above,
  # if you add dependencies to this list.
  - role: 'ansible-role-linux-grafana'
    vars:
      grafana_proxy: '{{ prometheus_grafana_proxy | bool }}'
      grafana_ngx_dept: '{{ prometheus_grafana_ngx_dept | bool }}'
      grafana_ldap_enabled: '{{ prometheus_grafana_ldap_enabled | bool }}'
      grafana_ldap_allow_sign_up: '{{ prometheus_grafana_ldap_allow_sign_up | bool }}'
      grafana_ldap_arg: '{{ prometheus_grafana_ldap_arg }}'
      grafana_path: '{{ prometheus_grafana_path }}'
      grafana_version: '{{ prometheus_grafana_version }}'
      grafana_admin_user: '{{ prometheus_grafana_admin_user }}'
      grafana_admin_password: '{{ prometheus_grafana_admin_password }}'
      grafana_https: '{{ prometheus_grafana_https | bool }}'
      grafana_port: '{{ prometheus_grafana_port }}'
      grafana_incident_levels_map: "{{ vars['prometheus_alert_incident_' + prometheus_alert_incident_levels_map] }}"
      grafana_ds_arg:
        - name: 'prometheus'
          settings:
            - server: '{{ ansible_default_ipv4.address }}'
              port: '{% if thanos_is_install | bool %}{{ thanos_port.query_frontend_http }}{% else %}{{ prometheus_port.prometheus }}{% endif %}'
        - name: 'alertmanager'
          settings:
            - server: '{{ ansible_default_ipv4.address }}'
              port: '{{ prometheus_port.alertmanager }}'
      grafana_ngx_block_agents: true
      grafana_ngx_block_string: true
      grafana_ngx_compress: true
      grafana_ngx_domain: '{{ prometheus_grafana_ngx_domain }}'
      grafana_ngx_port_http: '{{ prometheus_grafana_ngx_port_http }}'
      grafana_ngx_port_https: '{{ prometheus_grafana_ngx_port_https }}'
      grafana_ngx_ssl_protocols: 'modern'
      grafana_ngx_site:
        - domain: '{{ prometheus_grafana_ngx_domain }}'
          syntax:
            - 'location / {'
            - '  expires off;'
            - '  proxy_buffering off;'
            - '  proxy_http_version 1.1;'
            - '  proxy_set_header Host $host;'
            - '  proxy_set_header X-Real-IP $remote_addr;'
            - '  proxy_set_header X-Forwarded-Host $host;'
            - '  proxy_set_header X-Forwarded-Server $host;'
            - '  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;'
            - '  proxy_pass {% if prometheus_grafana_https | bool %}https{% else %}http{% endif %}://backend_{{ prometheus_grafana_ngx_domain }};'
            - '}'
          backend_address: '{{ prometheus_server }}'
          backend_port: '{{ prometheus_grafana_port }}'
          sticky: 'ip_hash'
          keepalive: '32'
    when: prometheus_grafana_dept | bool or prometheus_grafana_ngx_dept | bool
