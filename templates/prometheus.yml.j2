# Global configuration
global:
  scrape_interval:     {{ prometheus_arg.scrape_interval }}
  scrape_timeout:      {{ prometheus_arg.scrape_timeout }}
  evaluation_interval: {{ prometheus_arg.evaluation_interval }}
  external_labels:
    replica: {{ inventory_hostname|upper }}

# Alertmanager configuration
alerting:
  alert_relabel_configs:
    - regex: 'replica|job|ipaddress'
      action: labeldrop
  alertmanagers:
    - static_configs:
      - targets: ['{{ prometheus_server | list | join(":" + prometheus_port.alertmanager + "', '") }}:{{ prometheus_port.alertmanager }}']

# Rule configuration
rule_files:
  - {{ prometheus_conf_path }}/rules/*.rules

# Scrape configuration
scrape_configs:
  - job_name: 'unAuthenticate Instance'
{% if prometheus_arg.sd_conf == 'consul_sd_configs' %}
    consul_sd_configs:
      - server: '{{ prometheus_consul_server }}'
        token: {{ prometheus_consul_token }}
        refresh_interval: {{ prometheus_arg.refresh_interval }}
        services: ['{{ "_exporter', '".join(vars["unauthenticate_target_services"]) }}_exporter']
    relabel_configs:
      - source_labels: [__meta_consul_service_address]
        target_label: 'ipaddress'
      - regex: __meta_consul_service_metadata_(.+)
        action: labelmap
      - source_labels: [__meta_consul_service]
        target_label: 'service'
      - source_labels: [__meta_consul_service]
        regex: 'minio_exporter'
        target_label: __metrics_path__
        replacement: '/minio/prometheus/metrics'
      - source_labels: [__meta_consul_service]
        regex: 'netdata_exporter'
        target_label: __metrics_path__
        replacement: '/api/v1/allmetrics?format=prometheus&help=yes'
      - source_labels: [__meta_consul_service]
        regex: 'kibana_exporter'
        target_label: __metrics_path__
        replacement: '/_prometheus/metrics'
{% if prometheus_server | length > 3 %}
      - source_labels: [__address__]
        regex: '.+[{{ ip_sequence | list | unique | sort | join("") }}]:.+'
        action: 'drop'
{% endif %}
{% else %}
{% endif %}

  - job_name: 'Authenticate Instance'
    basic_auth:
      username: prometheus
      password: password
{% if prometheus_arg.sd_conf == 'consul_sd_configs' %}
    consul_sd_configs:
      - server: '{{ prometheus_consul_server }}'
        token: {{ prometheus_consul_token }}
        refresh_interval: {{ prometheus_arg.refresh_interval }}
        services: ['{{ "_exporter', '".join(vars["authenticate_target_services"]) }}_exporter']
    relabel_configs:
      - source_labels: [__meta_consul_service_address]
        target_label: 'ipaddress'
      - regex: __meta_consul_service_metadata_(.+)
        action: labelmap
      - source_labels: [__meta_consul_service]
        target_label: 'service'
      - source_labels: [__meta_consul_service]
        regex: 'graylog_exporter'
        target_label: __metrics_path__
        replacement: '/api/plugins/org.graylog.plugins.metrics.prometheus/metrics'
{% if prometheus_server | length > 3 %}
      - source_labels: [__address__]
        regex: '.+[{{ ip_sequence | list | unique | sort | join("") }}]:.+'
        action: 'drop'
{% endif %}
{% else %}
{% endif %}

{% if prometheus_prober_exporters is defined %}
  - job_name: 'Prober Instance'
{% if prometheus_arg.sd_conf == 'consul_sd_configs' %}
    consul_sd_configs:
      - server: '{{ prometheus_consul_server }}'
        token: {{ prometheus_consul_token }}
        refresh_interval: {{ prometheus_arg.refresh_interval }}
        services: ['{{ "_exporter_prober', '".join(vars["prometheus_prober_exporters"]) }}_exporter_prober']
    relabel_configs:
      - regex: __meta_consul_service_metadata_(.+)
        action: labelmap
      - source_labels: [__meta_consul_service_metadata_target]
        target_label: '__param_target'
      - source_labels: [__meta_consul_service_metadata_module]
        target_label: '__param_module'
      - source_labels: [__meta_consul_service]
        regex: 'blackbox_exporter_prober'
        target_label: __metrics_path__
        replacement: '/probe'
      - source_labels: [__meta_consul_service]
        regex: 'blackbox_exporter_prober'
        target_label: __address__
        replacement: {{ ansible_default_ipv4.address }}:{{ prometheus_port.blackbox }}
      - source_labels: [__meta_consul_service]
        regex: 'snmp_exporter_prober'
        target_label: __metrics_path__
        replacement: '/snmp'
      - source_labels: [__meta_consul_service]
        regex: 'snmp_exporter_prober'
        target_label: __address__
        replacement: {{ ansible_default_ipv4.address }}:{{ prometheus_port.snmp }}
{% else %}
{% endif %}
{% endif %}

{% if prometheus_k8s_api is defined %}
  - job_name: 'kubernetes-cadvisor'
    scheme: https
    bearer_token: '{{ prometheus_k8s_token | default("xxx") }}'
    tls_config:
      insecure_skip_verify: true
    kubernetes_sd_configs:
      - role: node
        api_server: 'https://{{ prometheus_k8s_api }}'
        bearer_token: '{{ prometheus_k8s_token | default("xxx") }}'
        tls_config:
          insecure_skip_verify: true
    relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - target_label: __address__
        replacement: {{ prometheus_k8s_api }}
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor
{% endif %}
