# Global configuration
global:
  scrape_interval:     {{ prometheus_arg.scrape_interval }}
  scrape_timeout:      {{ prometheus_arg.scrape_timeout }}
  evaluation_interval: {{ prometheus_arg.evaluation_interval }}
  external_labels:
    replica: {{ inventory_hostname|upper }}

# Alertmanager configuration
alerting:
  alert_relabel_configs:
    - regex: 'replica|job|ipaddress'
      action: labeldrop
  alertmanagers:
    - static_configs:
      - targets: ['{{ prometheus_server | list | join(":" + prometheus_port.alertmanager + "', '") }}:{{ prometheus_port.alertmanager }}']

# Rule configuration
rule_files:
  - {{ prometheus_conf_path }}/rules/*.rules

# Scrape configuration
scrape_configs:
  # Instance service discovery configuration
  - job_name: 'unAuthenticate Instance'
{% if prometheus_arg.sd_conf == 'consul_sd_configs' %}
    consul_sd_configs:
      - server: '{{ prometheus_consul_server }}'
        token: {{ prometheus_consul_token }}
        refresh_interval: {{ prometheus_arg.refresh_interval }}
        services: ['{{ "', '".join(vars["unauthenticate_target_services"]) }}']
    relabel_configs:
      - source_labels: [__meta_consul_service_address]
        target_label: 'ipaddress'
      - source_labels: [__meta_consul_service_metadata_instance]
        target_label: 'instance'
      - source_labels: [__meta_consul_service_metadata_group]
        target_label: 'group'
      - source_labels: [__meta_consul_service_metadata_environment]
        target_label: 'environment'
      - source_labels: [__meta_consul_service]
        target_label: 'service'
      - source_labels: [__meta_consul_service]
        regex: 'minio_exporter'
        target_label: __metrics_path__
        replacement: '/minio/prometheus/metrics'
      - source_labels: [__meta_consul_service_metadata_tenant]
        target_label: 'tenant'
{% if prometheus_server | length > 3 %}
      - source_labels: [__address__]
        regex: '.+[{{ ip_sequence | list | unique | sort | join("") }}]:.+'
        action: 'drop'
{% endif %}
{% else %}
{% endif %}

  - job_name: 'Authenticate Instance'
    basic_auth:
      username: prometheus
      password: password
{% if prometheus_arg.sd_conf == 'consul_sd_configs' %}
    consul_sd_configs:
      - server: '{{ prometheus_consul_server }}'
        token: {{ prometheus_consul_token }}
        refresh_interval: {{ prometheus_arg.refresh_interval }}
        services: ['{{ "', '".join(vars["authenticate_target_services"]) }}']
    relabel_configs:
      - source_labels: [__meta_consul_service_address]
        target_label: 'ipaddress'
      - source_labels: [__meta_consul_service_metadata_instance]
        target_label: 'instance'
      - source_labels: [__meta_consul_service_metadata_group]
        target_label: 'group'
      - source_labels: [__meta_consul_service_metadata_environment]
        target_label: 'environment'
      - source_labels: [__meta_consul_service]
        target_label: 'service'
      - source_labels: [__meta_consul_service]
        regex: 'graylog_exporter'
        target_label: __metrics_path__
        replacement: '/api/plugins/org.graylog.plugins.metrics.prometheus/metrics'
      - source_labels: [__meta_consul_service_metadata_tenant]
        target_label: 'tenant'
{% if prometheus_server | length > 3 %}
      - source_labels: [__address__]
        regex: '.+[{{ ip_sequence | list | unique | sort | join("") }}]:.+'
        action: 'drop'
{% endif %}
{% else %}
{% endif %}
