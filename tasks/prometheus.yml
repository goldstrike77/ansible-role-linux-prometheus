---
- name: Generate IP address filter
  set_fact:
    ip_sequence: "{{ ip_sequence | default([]) + [item[-1] | int] }}"
  with_sequence: start={{ prometheus_server.index(ansible_default_ipv4.address) }} end={{ prometheus_server | length * 4 }} stride={{ prometheus_server | length - 2 }}

- name: Creating prometheus configure folder
  file:
    dest: '{{ item }}'
    state: directory
    owner: root
    group: root
    mode: 0755
  with_items:
    - '{{ prometheus_conf_path }}/rules'
    - '{{ prometheus_conf_path }}/templates'
    - '{{ prometheus_conf_path }}/conf.d'

- name: Creating prometheus data folder
  file:
    dest: '{{ item }}'
    state: directory
    owner: prometheus
    group: prometheus
    mode: 0755
  with_items:
    - '{{ prometheus_data_path }}/prometheus'
    - '{{ prometheus_data_path }}/alertmanager'

- name: Prometheus configure file transfer
  template:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    owner: 'root'
    group: 'root'
    mode: 0644
  with_items:
    - '{{ prometheus_conf_files }}'
  register: soft_config

- name: Include rules for alertmanager
  include_vars:
    file: 'alert_rules/{{ item }}.yml'
  with_items:
    - '{{ prometheus_alert_rules }}'
  when:
    - prometheus_alert_rules != []

- name: Prometheus alerting template file transfer
  copy:
    src: "default.tmpl"
    dest: "{{ prometheus_conf_path }}/templates/default.tmpl"
    owner: root
    group: root
    mode: 0644
  notify: 'Reload prometheus service'

- name: Prometheus alerting rules file transfer
  template:
    src: "alert.rules.j2"
    dest: "{{ prometheus_conf_path }}/rules/alert_{{ item }}.rules"
    owner: root
    group: root
    mode: 0644
    validate: "/bin/promtool check rules %s"
  with_items:
    - '{{ prometheus_alert_rules }}'
  when:
    - prometheus_alert_rules != []
  notify: 'Reload prometheus service'
