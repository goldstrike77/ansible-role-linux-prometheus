---
- name: Check local consul client are accessible from current host.
  uri:
    url: '{{ consul_public_http_prot }}://{{ ansible_default_ipv4.address }}:{{ consul_public_http_port }}/v1/agent/service/register'
    method: 'GET'
    timeout: '5'
    validate_certs: 'no'
  environment:
    no_proxy: '{{ ansible_default_ipv4.address }}'
  changed_when: false
  failed_when: false
  register: check_consul_local

- name: Register Prometheus common service with an health check.
  uri:
    url: '{{ consul_public_http_prot }}://{{ ansible_default_ipv4.address }}:{{ consul_public_http_port }}/v1/agent/service/register'
    method: 'PUT'
    body: '{"tags":["service","{{ item }}"],"ID":"{{ customer | lower | regex_replace("_", "-") }}-{{ environments | lower | regex_replace("_", "-") }}-{{ group_names[-1] | lower | regex_replace("_", "-") }}-{{ group_names[0] | lower | regex_replace("_", "-") }}-{{ item }}","name":"{{ customer | lower | regex_replace("_", "-") }}-{{ environments | lower | regex_replace("_", "-") }}-{{ group_names[-1] | lower | regex_replace("_", "-") }}-{{ group_names[0] | lower | regex_replace("_", "-") }}-{{ item }}","address":"{{ ansible_default_ipv4.address }}","port":{{ prometheus_port[item] }},"checks":[{"tcp":"{{ ansible_default_ipv4.address }}:{{ prometheus_port[item] }}","interval":"60s","timeout":"10s"}]}'
    body_format: 'json'
    status_code: '200'
    headers:
      X-Consul-Token: '{{ consul_public_exporter_token }}'
      X-Requested-By: '{{ ansible_default_ipv4.address }}'
      cache-control: 'no-cache'
    validate_certs: 'no'
  environment:
    no_proxy: '{{ ansible_default_ipv4.address }}'
  loop: "{{ prometheus_service }}"
  when: check_consul_local.status == 405
  register: register_status
  until: register_status.status == 200
  retries: 3
  delay: 2
  no_log: true
  changed_when: false
  failed_when: false

- name: Check register consul client are accessible from current host.
  uri:
    url: '{{ consul_public_http_prot }}://{{ item }}:{{ consul_public_http_port }}/v1/agent/service/register'
    method: 'GET'
    timeout: '5'
    validate_certs: 'no'
  environment:
    no_proxy: '{{ item }}'
  loop: '{{ consul_public_clients }}'
  changed_when: false
  failed_when: false
  register: check_consul_reg

- name: Register Prometheus common exporter.
  uri:
    url: '{{ consul_public_http_prot }}://{{ item.0.client }}:{{ consul_public_http_port }}/v1/agent/service/register'
    method: 'PUT'
    body: '{"tags":["prometheus","exporter"],"ID":"{{ ansible_hostname | lower }}-{{ item.1 }}_exporter","name":"{{ item.1 }}_exporter","address":"{{ ansible_default_ipv4.address }}","port":{{ prometheus_port[item.1] }},"meta":{"application":"Monitor","metrics_path":"/metrics","instance":"{{ ansible_hostname | lower }}","customer":"{{ customer | title | regex_replace("_", "-") }}","project":"{{ group_names[-1] | title | regex_replace("_", "-") }}","group":"{{ group_names[0] | title }}","datacenter": "{{ datacenter | lower }}","domain":"{{ domain | lower }}","environment":"{{ environments | lower }}"{% if tags is defined %},{{ tags | to_json | regex_replace("{") | regex_replace("}") }}{% endif %}}}'
    body_format: 'json'
    status_code: '200'
    headers:
      X-Consul-Token: '{{ consul_public_exporter_token }}'
      X-Requested-By: '{{ ansible_default_ipv4.address }}'
      cache-control: 'no-cache'
    validate_certs: 'no'
  environment:
    no_proxy: '{{ item.0.client }}'
  loop: "{{ check_consul_reg.results | json_query('[*].{client:item,status:status}') | product(prometheus_service) | list }}"
  when: item.0.status == 405
  register: register_status
  until: register_status.status == 200
  retries: 3
  delay: 2
  no_log: true
  changed_when: false
  failed_when: false

- name: Register Prometheus prober exporter.
  uri:
    url: '{{ consul_public_http_prot }}://{{ item.0.client }}:{{ consul_public_http_port }}/v1/agent/service/register'
    method: 'PUT'
    body: '{"tags":["prometheus","exporter"],"ID":"{{ ansible_hostname | lower }}_{{ item.1.split("_")[0] }}_exporter","name":"{{ item.1.split("_")[0] }}_exporter","address":"{{ ansible_default_ipv4.address }}","port":{{ prometheus_port[item.1.split("_")[0]] }},"meta":{"application":"Monitor","metrics_path":"/metrics","instance":"{{ ansible_hostname | lower }}","customer":"{{ customer | title | regex_replace("_", "-") }}","project":"{{ group_names[-1] | title | regex_replace("_", "-") }}","group":"{{ group_names[0] | title }}","datacenter": "{{ datacenter | lower }}","domain":"{{ domain | lower }}","environment":"{{ environments | lower }}"{% if tags is defined %},{{ tags | to_json | regex_replace("{") | regex_replace("}") }}{% endif %}}}'
    body_format: 'json'
    status_code: '200'
    headers:
      X-Consul-Token: '{{ consul_public_exporter_token }}'
      X-Requested-By: '{{ ansible_default_ipv4.address }}'
      cache-control: 'no-cache'
    validate_certs: 'no'
  environment:
    no_proxy: '{{ item.0.client }}'
  loop: "{{ check_consul_reg.results | json_query('[*].{client:item,status:status}') | product(prometheus_prober_exporters) | list }}"
  when: item.0.status == 405
  register: register_status
  until: register_status.status == 200
  retries: 3
  delay: 2
  no_log: true
  changed_when: false
  failed_when: false

- name: Register Thanos base component exporter.
  uri:
    url: '{{ consul_public_http_prot }}://{{ item.0.client }}:{{ consul_public_http_port }}/v1/agent/service/register'
    method: 'PUT'
    body: '{"tags":["prometheus","exporter"],"ID":"{{ ansible_hostname | lower }}_thanos-{{ item.1 }}_exporter","name":"thanos-{{ item.1 }}_exporter","address":"{{ ansible_default_ipv4.address }}","port":{{ thanos_port[item.1 | regex_replace("-", "_") + "_http"] }},"meta":{"application":"Monitor","metrics_path":"/metrics","instance":"{{ ansible_hostname | lower }}","customer":"{{ customer | title | regex_replace("_", "-") }}","project":"{{ group_names[-1] | title | regex_replace("_", "-") }}","group":"{{ group_names[0] | title }}","datacenter": "{{ datacenter | lower }}","domain":"{{ domain | lower }}","environment":"{{ environments | lower }}"{% if tags is defined %},{{ tags | to_json | regex_replace("{") | regex_replace("}") }}{% endif %}}}'
    body_format: 'json'
    status_code: '200'
    headers:
      X-Consul-Token: '{{ consul_public_exporter_token }}'
      X-Requested-By: '{{ ansible_default_ipv4.address }}'
      cache-control: 'no-cache'
    validate_certs: 'no'
  environment:
    no_proxy: '{{ item.0.client }}'
  loop: "{{ check_consul_reg.results | json_query('[*].{client:item,status:status}') | product(thanos_base_components) | list }}"
  when:
    - item.0.status == 405
    - thanos_is_install | bool
  register: register_status
  until: register_status.status == 200
  retries: 3
  delay: 2
  no_log: true
  changed_when: false
  failed_when: false

- name: Register Thanos optiona component exporter.
  uri:
    url: '{{ consul_public_http_prot }}://{{ item.0.client }}:{{ consul_public_http_port }}/v1/agent/service/register'
    method: 'PUT'
    body: '{"tags":["prometheus","exporter"],"ID":"{{ ansible_hostname | lower }}_thanos-{{ item.1 }}_exporter","name":"thanos-{{ item.1 }}_exporter","address":"{{ ansible_default_ipv4.address }}","port":{{ thanos_port[item.1 + "_http"] }},"meta":{"application":"Monitor","metrics_path":"/metrics","instance":"{{ ansible_hostname | lower }}","customer":"{{ customer | title | regex_replace("_", "-") }}","project":"{{ group_names[-1] | title | regex_replace("_", "-") }}","group":"{{ group_names[0] | title }}","datacenter": "{{ datacenter | lower }}","domain":"{{ domain | lower }}","environment":"{{ environments | lower }}"{% if tags is defined %},{{ tags | to_json | regex_replace("{") | regex_replace("}") }}{% endif %}}}'
    body_format: 'json'
    status_code: '200'
    headers:
      X-Consul-Token: '{{ consul_public_exporter_token }}'
      X-Requested-By: '{{ ansible_default_ipv4.address }}'
      cache-control: 'no-cache'
    validate_certs: 'no'
  environment:
    no_proxy: '{{ item.0.client }}'
  loop: "{{ check_consul_reg.results | json_query('[*].{client:item,status:status}') | product(thanos_opti_components) | list }}"
  when:
    - item.0.status == 405
    - thanos_is_install | bool
    - thanos_bucket_is_used | bool
  register: register_status
  until: register_status.status == 200
  retries: 3
  delay: 2
  no_log: true
  changed_when: false
  failed_when: false

- name: Register Thanos standalone component exporter.
  uri:
    url: '{{ consul_public_http_prot }}://{{ item.0.client }}:{{ consul_public_http_port }}/v1/agent/service/register'
    method: 'PUT'
    body: '{"tags":["prometheus","exporter"],"ID":"{{ ansible_hostname | lower }}_thanos-{{ item.1 }}_exporter","name":"thanos-{{ item.1 }}_exporter","address":"{{ ansible_default_ipv4.address }}","port":{{ thanos_port[item.1 + "_http"] }},"meta":{"application":"Monitor","metrics_path":"/metrics","instance":"{{ ansible_hostname | lower }}","customer":"{{ customer | title | regex_replace("_", "-") }}","project":"{{ group_names[-1] | title | regex_replace("_", "-") }}","group":"{{ group_names[0] | title }}","datacenter": "{{ datacenter | lower }}","domain":"{{ domain | lower }}","environment":"{{ environments | lower }}"{% if tags is defined %},{{ tags | to_json | regex_replace("{") | regex_replace("}") }}{% endif %}}}'
    body_format: 'json'
    status_code: '200'
    headers:
      X-Consul-Token: '{{ consul_public_exporter_token }}'
      X-Requested-By: '{{ ansible_default_ipv4.address }}'
      cache-control: 'no-cache'
    validate_certs: 'no'
  environment:
    no_proxy: '{{ item.0.client }}'
  loop: "{{ check_consul_reg.results | json_query('[*].{client:item,status:status}') | product(thanos_stand_components) | list }}"
  when:
    - item.0.status == 405
    - thanos_is_install | bool
    - thanos_bucket_is_used | bool
    - prometheus_server[0] in ansible_default_ipv4.address
  register: register_status
  until: register_status.status == 200
  retries: 3
  delay: 2
  no_log: true
  changed_when: false
  failed_when: false

- name: Register Azure Monitor exporter.
  uri:
    url: '{{ consul_public_http_prot }}://{{ item.client  }}:{{ consul_public_http_port }}/v1/agent/service/register'
    method: 'PUT'
    body: '{"tags":["prometheus","exporter"],"ID":"{{ ansible_hostname | lower }}_azure-metrics_exporter","name":"azure-metrics_exporter","address":"{{ ansible_default_ipv4.address }}","port":{{ prometheus_port.azure_monitor }},"meta":{"application":"Cloud","metrics_path":"/metrics","instance":"{{ ansible_hostname | lower }}","customer":"{{ customer | title | regex_replace("_", "-") }}","project":"{{ group_names[-1] | title | regex_replace("_", "-") }}","group":"{{ group_names[0] | title }}","datacenter": "{{ datacenter | lower }}","domain":"{{ domain | lower }}","environment":"{{ environments | lower }}"{% if tags is defined %},{{ tags | to_json | regex_replace("{") | regex_replace("}") }}{% endif %}}}'
    body_format: 'json'
    status_code: '200'
    headers:
      X-Consul-Token: '{{ consul_public_exporter_token }}'
      X-Requested-By: '{{ ansible_default_ipv4.address }}'
      cache-control: 'no-cache'
    validate_certs: 'no'
  environment:
    no_proxy: '{{ item.client }}'
  loop: "{{ check_consul_reg.results | json_query('[*].{client:item,status:status}') }}"
  when:
    - item.status == 405
    - prometheus_azure_monitor is defined
  register: register_status
  until: register_status.status == 200
  retries: 3
  delay: 2
  no_log: true
  changed_when: false
  failed_when: false
