---
# General parameters #
prometheus_is_install: false # A boolean to determine whether or not to install the Prometheus.
thanos_is_install: false # A boolean to determine whether or not to install the Thanos.
thanos_bucket_is_used: false # A boolean to determine whether or not to use object storage.
prometheus_data_path: '/data' # Specify the Prometheus configure directory.
prometheus_alert_incident_levels_map: 'severity' # Defines the display mode of incident alarm, severity or priority.
# ┌──────────┬──────────┐
# │ priority │ severity │
# ├──────────┼──────────┤
# │    p1    │ critical │
# ├──────────┼──────────┤
# │    p2    │ high     │
# ├──────────┼──────────┤
# │    p3    │ warning  │
# ├──────────┼──────────┤
# │    p4    │ info     │
# └──────────┴──────────┘
#prometheus_external_labels: # The global labels to time series or alerts when communicating with external systems.
#  geography: 'China'
#  region: 'chinaeast2'

# Consul SD configurations #
prometheus_consul_server: 'consul.service.dc01.local:8500' # The consul address and port.
prometheus_consul_token: '7471828c-d50a-4b25-b6a5-xxxxxxxxxxxx' # The consul acl token.

# Kubernetes SD configurations #
#prometheus_kubernetes:
#  - apiserver: 'demo-prd-infra-operator-k8s.service.dc01.local:6443'
#    token: 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'
#    node_discover:
#      enable: true
#    pod_discover:
#      enable: false
#      scheme: 'http'
#      port: '8080'
#      metrics_path: 'prometheus'
#  - apiserver: 'demo-dev-infra-operator-k8s.service.dc01.local:6443'
#    token: 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'
#    node_discover:
#      enable: true
#    pod_discover:
#      enable: false
#      scheme: 'http'
#      port: '8080'
#      metrics_path: 'prometheus'

# Azure Monitor Metric configurations #
#prometheus_azure_monitor:
#  tenant_id: 'xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx'
#  client_id: 'xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx'
#  client_secret: 'xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx'
#  environment: 'AzureChinaCloud'
#  subscription:
#    - 'xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx'
#    - 'xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx'
#  resources:
#    - 'Microsoft.Cache/Redis'
#    - 'Microsoft.DBforMySQL/servers'
#    - 'Microsoft.DBforPostgreSQL/servers'
#    - 'microsoft.network/virtualnetworkgateways'
#    - 'Microsoft.Sql/managedInstances'
#    - 'Microsoft.Sql/servers/elasticPools'
#    - 'Microsoft.Storage/storageAccounts'

# Role dependencies #
prometheus_grafana_dept: true # A boolean to determine whether or not to install the Grafana for metrics visualization.
prometheus_grafana_ngx_dept: true # A boolean to determine whether or not to proxy Grafana web interface using NGinx.

# Listen port #
prometheus_port: 
  alertmanager: '9093'
  azure_monitor: '9276'
  blackbox: '9115'
  cluster: '9094'
  prometheus: '9090'
  pushgateway: '9091'
  smokeping: '9374'
  snmp: '9116'
thanos_port:
  bucket_http: '19195'
  compact_http: '19194'
  query_frontend_http: '19190'
  query_grpc: '19092'
  query_http: '19192'
  sidecar_grpc: '19091'
  sidecar_http: '19191'
  store_grpc: '19093'
  store_http: '19193'

# Grafana parameters #
prometheus_grafana_path: '{{ prometheus_data_path }}' # Specify the Grafana data directory.
prometheus_grafana_version: '6.7' # Specify the Grafana version.
prometheus_grafana_admin_user: 'admin' # The name of the default Grafana admin user.
prometheus_grafana_admin_password: 'changeme' # The password of the default Grafana admin.
prometheus_grafana_https: true # A boolean to determine whether or not to Encrypting HTTP client communications.
prometheus_grafana_port: '3000' # Grafana instance listen port.
prometheus_grafana_proxy: false # Whether running behind a HaProxy.
prometheus_grafana_ngx_domain: 'visual.example.com' # Defines domain name.
prometheus_grafana_ngx_port_http: '80' # NGinx HTTP listen port.
prometheus_grafana_ngx_port_https: '443' # NGinx HTTPs listen port.
prometheus_grafana_ldap_enabled: false
prometheus_grafana_ldap_allow_sign_up: false
prometheus_grafana_ldap_arg:
  servers:
    host: 127.0.0.1
    port: 389
    use_ssl: false
    start_tls: false
    ssl_skip_verify: true
    bind_dn: 'cn=admin,dc=example,dc=com'
    bind_password: changeme
    search_filter: '(cn=%s)'
    search_base_dns:
      - 'dc=example,dc=com'
    group_search_filter: '(&(objectClass=posixGroup)(memberUid=%s))'
    group_search_base_dns:
      - 'ou=groups,dc=example,dc=com'
    attributes:
      name: givenName
      surname: sn
      username: cn
      member_of: memberOf
      email: email
  group_mappings:
    - name: Main Org.
      id: 1
      groups:
        - group_dn: 'cn=admins,ou=groups,dc=example,dc=com'
          org_role: Admin
        - group_dn: 'cn=editors,ou=groups,dc=example,dc=com'
          org_role: Editor
        - group_dn: '*'
          org_role: Viewer
    - name: Other Org.
      id: 2
      groups:
        - group_dn: 'cn=other,ou=groups,dc=example,dc=com'
          org_role: Viewer

# Prometheus System Variables #
prometheus_arg:
  evaluation_interval: '60s' # How frequently to evaluate rules
  log_level: 'warn' # The level of logging, One of: [debug, info, warn, error]
  query_max_concurrency: '1024' # Maximum number of queries executed concurrently
  refresh_interval: '60s' # Refresh interval to re-read the instance list
  scrape_interval: '60s' # How frequently to scrape targets from this job
  scrape_timeout: '30s' # How long until a scrape request times out
  storage_tsdb_block_duration: '1h' # Must be set to equal values to disable local compaction
  storage_tsdb_retention: '7d' # How long to retain samples in storage
  ulimit_core: 'infinity' # The number of coredump launched by systemd
  ulimit_memlock: 'infinity' # The number of memory lock launched by systemd
  ulimit_nofile: '262144' # The number of files launched by systemd
  ulimit_nproc: '262144' # The number of processes launched by systemd

# Prober Exporter Variables #
#prometheus_prober_arg:
#  smokeping_hosts:
#    - '223.5.5.5'
#    - '119.29.29.29'

# Alertmanager System Variables #
alertmanager_arg:
  timezone: 'Local' # Local or UTC.
  group_by:
    - 'alertname'
    - 'cluster'
    - 'service'
  group_wait: '60s'
  group_interval: '60s'
  repeat_interval: '2h'
#  smtp_arg:
#    auth_password: 'changeme'
#    auth_username: 'user'
#    require_tls: false
#    smarthost: '127.0.0.1:25'
#    from: 'do-not-reply@somebody.com'
#    to: 'somebody@somebody.com'
#  wechat_arg:
#   api_corpid: 'wxe787605fxxxxxxxx' # 我的企业 > 企业ID
#   api_secret: 'fm6Ehm6DI8PlGWxtKcgkDOZCLMTsNqKqTxxxxxxxxxx' # 应用与小程序 > 自建 > 选择应用 > Secret
#   api_agentid: '0' # 应用与小程序 > 自建 > 选择应用 > AgentId
#   to_party: '1'
#  webhook:
#    - name: 'alerta' 
#      url: 'https://demo-prd-infra-monitor-alerta.service.dc01.local:7443/api/webhooks/prometheus?api-key=1i_3_J4G6pjqsVkwYy7ZRj7bsXCHMqFYXaIksEMq'

# Alertmanager rules #
prometheus_alert_rules: # Defining alerting rules.
  - 'Alertmanager'
  - 'Beats'
  - 'Blackbox'
  - 'Consul'
  - 'DellHW'
  - 'ElasticSearch'
  - 'Graylog'
  - 'HaProxy'
  - 'Jenkins'
  - 'JMX'
  - 'Kafka'
  - 'KeepAlived'
  - 'Kubernetes'
  - 'Logstash'
  - 'Minio'
  - 'MongoDB'
  - 'MySQL'
  - 'Netdata'
  - 'NGinx'
  - 'OpenLDAP'
  - 'OS'
  - 'OSSec'
  - 'Php'
  - 'PostgreSQL'
  - 'Prometheus'
  - 'Pushgateway'
  - 'RabbitMQ'
  - 'Redis'
  - 'Smokeping'
  - 'Targets'
  - 'Thanos'

# Thanos System Variables #
thanos_arg:
  chunk_pool_size: '2GB' # Maximum size of concurrently allocatable bytes for chunks
  index_cache_size: '1GB' # Maximum size of items held in the index cache
  log_format: 'logfmt'
  log_level: 'warn'
  max_size: '256MB' # Maximum memory size of the cache in bytes.
  query_auto_downsampling: false # Enable automatic adjustment source data
  query_max_concurrent: '1024' # Maximum number of queries processed concurrently
  query_timeout: '1m' # Maximum time to process query
  ulimit_core: 'infinity' # The number of coredump launched by systemd
  ulimit_memlock: 'infinity' # The number of memory lock launched by systemd
  ulimit_nofile: '262144' # The number of files launched by systemd
  ulimit_nproc: '262144' # The number of processes launched by systemd

# Thanos objstore Variables #
thanos_obj_arg:
  retention: '365' # Days to retain samples in bucket.
  type: 'S3' # Define the Object Storage Provider, Possible values are S3, AZURE, ALIYUNOSS.
# S3
  bucket: 'thanos'
  endpoint: 'demo-prd-infra-storage-minio-thanos.service.dc01.local:9001'
  insecure: false
  signature_version2: false
  access_key: 'HYBBSS5EAC3RZEURZ3TQ'
  secret_key: '4AElW1GQ59GMxq5SgvWzpN6wiZUapQZiMyhpeaAj'
# AZURE
#  storage_account: "sashapinfmon01"
#  storage_account_key: "ARV1F8G6s1EI5ieyQnQNXpE67UK/uzREgQIYd3sTIDnO8vaBxQfuuhTAqAkd+A6hUaMNcix5mJw/gMc/IJ7bPg=="
#  container: "thanos"
#  endpoint: "blob.core.chinacloudapi.cn"
# ALIYUNOSS
#  endpoint: ""
#  bucket: ""
#  access_key_id: ""
#  access_key_secret: ""

# Service Mesh #
environments: 'prd' # Define the service environment.
datacenter: 'dc01'
domain: 'local'
customer: 'demo'
#tags: # Define the service custom label.
#  subscription: 'default'
#  owner: 'nobody'
#  department: 'Infrastructure'
#  organization: 'The Company'
#  region: 'China'
exporter_is_install: false # Whether to install prometheus exporter.
consul_public_register: false # Whether register a exporter service with public consul client.
consul_public_exporter_token: '00000000-0000-0000-0000-000000000000' # Public Consul client ACL token.
consul_public_http_prot: 'https' # The consul Hypertext Transfer Protocol.
consul_public_http_port: '8500' # The consul HTTP API port.
consul_public_clients: # List of public consul clients.
  - '127.0.0.1'